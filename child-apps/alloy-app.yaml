apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-alloy
  namespace: argocd
spec:
  project: default

  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: alloy                  # chart name shown by `helm list`
    targetRevision: 1.1.0         # ‚Üê chart version that is running
    helm:
      releaseName: grafana-alloy
      values: |
        alloy:
          configMap:
            content: |-
              logging {
                level = "debug"
                format = "logfmt"
              }
              discovery.kubernetes "pods" {
                role = "pod"
              }
              discovery.relabel "pods" {
                targets = discovery.kubernetes.pods.targets

                rule {
                  source_labels = ["__meta_kubernetes_namespace"]
                  target_label = "namespace"
                  action = "replace"
                }

                rule {
                  source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
                  target_label = "app"
                  action = "replace"
                }

                rule {
                  source_labels = ["__meta_kubernetes_pod_container_name"]
                  target_label = "container"
                  action = "replace"
                }

                rule {
                  source_labels = ["__meta_kubernetes_pod_name"]
                  target_label = "pod"
                  action = "replace"
                }
              }
              loki.source.kubernetes "pods" {
                targets    = discovery.relabel.pods.output
                forward_to = [loki.process.process.receiver]
              }
              loki.process "process" {
                forward_to = [loki.write.loki.receiver]

                stage.drop {
                  older_than          = "1h"
                  drop_counter_reason = "too old"
                }

                stage.regex {
                  expression = "\\[(?P<trace_id>[0-9a-f]{16,32})-(?P<span_id>[0-9a-f]{16,32})\\]"
                }

                stage.labels {
                  values = {
                    trace_id = "{{ .trace_id }}",
                    span_id = "{{ .span_id }}",
                  }
                }

                stage.match { 
                  selector = "{instance=~\".*\"}"
                  stage.json {
                    expressions = {
                      level = "\"level\"",
                    }
                  }
                  stage.labels {
                    values = { 
                      level = "level",
                    }
                  }
                }
                stage.label_drop {
                  values = [ "service_name" ]
                }
              }
              loki.write "loki" {
                endpoint {
                  url = "http://loki-gateway/loki/api/v1/push"
                }
              }
          mounts:
            varlog: true
            dockercontainers: true

          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi

  destination:
    server: https://kubernetes.default.svc
    namespace: loki

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
